import{_ as s,o as a,c as n,X as l}from"./chunks/framework.5806856a.js";const C=JSON.parse('{"title":"ai & 人工智能","description":"","frontmatter":{},"headers":[],"relativePath":"ai/index.md","filePath":"ai/index.md"}'),o={name:"ai/index.md"},p=l(`<h1 id="ai-人工智能" tabindex="-1">ai &amp; 人工智能 <a class="header-anchor" href="#ai-人工智能" aria-label="Permalink to &quot;ai &amp; 人工智能&quot;">​</a></h1><h2 id="ai-应用场景" tabindex="-1">ai 应用场景 <a class="header-anchor" href="#ai-应用场景" aria-label="Permalink to &quot;ai 应用场景&quot;">​</a></h2><ul><li>以文生小说</li><li>以文生图</li><li>以文生视频</li><li>以文搜索图，按内容搜索，clip</li><li>以文搜索答案，ai文档库，<a href="https://www.danswer.ai/" target="_blank" rel="noreferrer">https://www.danswer.ai/</a></li><li>翻译</li></ul><h2 id="深度学习翻译模型" tabindex="-1">深度学习翻译模型 <a class="header-anchor" href="#深度学习翻译模型" aria-label="Permalink to &quot;深度学习翻译模型&quot;">​</a></h2><p>对于一些常见的机器翻译任务，存在一些免费的预训练模型可供使用。这些模型通常是由研究机构或社区开发，并在一些公开数据集上进行了训练。您可以通过下载这些模型并加载到您的代码中来进行中文翻译。</p><p>以下是一些常用的免费预训练模型：</p><ol><li><p><strong>Hugging Face Transformers</strong>: Hugging Face提供了一个名为Transformers的开源库，其中包含了大量的预训练模型，包括用于机器翻译的模型。您可以使用<code>transformers</code>库来访问这些模型，并根据您的需求进行中文翻译。</p><p>示例代码：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> transformers </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> MarianMTModel</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MarianTokenizer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">model_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Helsinki-NLP/opus-mt-zh-en</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">model </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> MarianMTModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from_pretrained</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">model_name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">tokenizer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> MarianTokenizer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from_pretrained</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">model_name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">你好</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">inputs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokenizer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">text</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">return_tensors</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">outputs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> model</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">generate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">inputs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">translated_text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokenizer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">outputs</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">],</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">skip_special_tokens</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">translated_text</span><span style="color:#89DDFF;">)</span></span></code></pre></div></li><li><p><strong>OpenNMT Pretrained Models</strong>: OpenNMT官方提供了一些预训练的模型，覆盖了不同语言对的翻译。您可以在OpenNMT的GitHub页面上找到这些模型，并将其加载到您的代码中。</p><p>示例代码：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> torch</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> onmt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">translate </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Translator</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> onmt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">misc </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> load_checkpoint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">checkpoint_path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;MODEL_CHECKPOINT_PATH&gt;</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">checkpoint </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> torch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">checkpoint_path</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">map_location</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">torch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">device</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cpu</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">model_opt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> checkpoint</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">opt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">model </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">load_checkpoint</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">checkpoint</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> model_opt</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">translator </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Translator</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">model</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> model_opt</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">src_text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">你好</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pred</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> translator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">src_text</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pred</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">])</span></span></code></pre></div></li></ol><p>这些模型可以为您提供免费的中文翻译功能，但请注意，它们可能在特定任务或数据集上的性能和质量有所不同。您可以根据您的具体需求选择适合的模型，并在使用之前查阅相应模型的文档和示例代码以获取更多详细信息。</p>`,8),e=[p];function t(r,c,F,D,y,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
